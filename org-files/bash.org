:PROPERTIES:
:ID:       b2eb44fa-1010-4219-9dea-ea4458e92d64
:END:
#+title: bash
#+STARTUP: show2levels
#+date: <2023-08-30>

Hola GNU Bash o simplemente Bash (Bourne-again shell) es una interfaz de usuario de línea de comandos popular, específicamente un shell de Unix; así como un lenguaje de scripting. Bash fue originalmente escrito por Brian Fox para el sistema operativo GNU.​ Se ha utilizado ampliamente como el intérprete predeterminado para la mayoría de las distribuciones de GNU/Linux.

#+ATTR_HTML: :width 300px :align right
[[./img/bash.png]]

* Alias
- Comprobar si existe el archivo ~~/.bash_aliases~
- Editar el archivo ~/.bashrc si no existe el anterior
- Añadir el nuevo alias -> alias ll="ls -la"
- Habilitar los cambios -> source ~/.bashrc
* Comandos
** diff (comparar dos directorios)
~diff -qr /ruta/a/carpeta1 /ruta/a/carpeta2~
 - -q muestra solo si los archivos son diferentes.
 - -r compara los directorios de manera recursiva.
** ls (listar directorio)
- ls -a (Listar directorio con ocultos)
** mv (mover / renombrar)
- mv old-name-dir/ new-name-dir (Renombra directorios)
** sed
- Imprimir una línea -> sed '2p' file
** which (Localizar un comando)
- which comando
** Curl
- Descargar un archivo > curl 'dirección' -o archivo
** ps - Kill (Listar y Matar un proceso)
*** Listar procesos (ps -aux)
- e = muestra todos los procesos
- f = formato extra completo
- a = mostrar procesos para todos los usuarios.
- u = muestra el usuario propietario del proceso.
- x = también muestra procesos no conectados a terminal.
*** Matar procesos (kill -9 pid)
- -1 cuelga las llamadas al proceso
- -9 mata literalmente el proceso
- -15 termina el proceso
* Grabar imagen en pendrive o sd
#+BEGIN_SRC sh
    # localizar la imagen y descomprimirla
    unzip loquesea.zip
    # localizar la unidad del pendrive
    df -h
    # desmontar la unidad (o varias...)
    umount /dev/sdb1
    umount /dev/sdb2
    # grabar el pendrive
    sudo dd bs=1M if=loquesea.img of=dev/sdb status=progress
#+END_SRC
* Rclone
*** Montar una carpeta > rclone mount ruta_remota: ruta_local --daemon
* Regex
*** Uso de variable en una expresión regular -> ${var
* Uso de variables indirectas
#+begin_src sh
    var=x; val=foo
    eval "$var=\$val"

    var=x;x=foo
    echo ${!var}
#+end_src
* Scripts
** Encabezado
#+BEGIN_SRC 
#!/bin/bash
# -*- encoding: utf-8 -*-

###################################################################
#Script Name: Nombre
#Description: Descripción
#Args: N/A
#Creation/Update: 20191022/20191129
#Author: www.sherblog.pro                                                
#Email: sherlockes@gmail.com                                           
###################################################################
#+END_SRC
** Lanzar un script y cerrar la terminal ~./nombre_del_script.sh &~
#+begin_quote
Si cierras la consola y luego abres una nueva sesión en el mismo terminal, el script se detendrá cuando cierres la sesión de la terminal. Para evitar esto, deberías usar nohup, ya que asegura que el script continúe ejecutándose incluso después de cerrar y abrir una nueva sesión de terminal.
#+end_quote
** Parar un script ante un error
- set -e
- set -o errexit
Ambos son equivalentes, con 'set +e' el script no para.
** Directorio de un script
script_dir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
** Comentarios
**** Multilínea -> : '  -------- '
